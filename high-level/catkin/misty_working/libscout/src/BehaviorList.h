/**
 ******************************************************************************
 * WARNING: THIS IS AN AUTOGENERATED FILE!
 *
 * Editing this file is USELESS. It will be overwritten during the build.
 * To properly edit this file, edit its corresponding *.template.* file, which
 * a script run by CMake uses to generate this file.
 *
 * This file was generated via rules in src/generate_behavior_lists.py.
 *
 * Please see that file for a description of syntax and procedure for
 * creating auto-generated files.
 *
 * THIS WARNING IS LONG TO MAKE SURE IT GETS YOUR ATTENTION!
 * THANK YOU.
 *****************************************************************************
 */

#ifndef _BEHAVIOR_LIST_H_
#define _BEHAVIOR_LIST_H_

#include "Behavior.h"
#include "Sensors.h"
#include "behaviors/pause_scout.h"
#include "test_behaviors/danger_marking.h"
#include "behaviors/draw_ccw_circle.h"
#include "behaviors/draw_cw_circle.h"
#include "behaviors/line_follow.h"
#include "test_behaviors/maze_solve.h"
#include "test_behaviors/maze_solve_simple.h"
#include "behaviors/navigationMap.h"
#include "behaviors/Odometry.h"
#include "test_behaviors/Odometry_new.h"
#include "test_behaviors/Scheduler.h"
#include "test_behaviors/smart_runaround.h"
#include "test_behaviors/WH_Robot.h"
#include "behaviors/wl_test.h"

template<typename T> Behavior* behavior(std::string scoutname, Sensors* sensors){ return (Behavior*)new T(scoutname, sensors); } 

typedef Behavior* (* behavior_func)(std::string, Sensors*);

class BehaviorList
{
  public:
  std::vector<behavior_func> behavior_list;

  //Constructor. Initializes behavior_list
  BehaviorList();
  //Destructor. Frees behavior_list;
  ~BehaviorList();
};

#endif
